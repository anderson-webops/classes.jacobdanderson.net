/* eslint-disable */
/* prettier-ignore */
// @ts-nocheck
// noinspection ES6UnusedImports
// Generated by unplugin-vue-router. ‼️ DO NOT MODIFY THIS FILE ‼️
// It's recommended to commit this file.
// Make sure to add this file to your tsconfig.json file as an "includes" or "files" entry.

declare module 'vue-router/auto-resolver' {
  export type ParamParserCustom = never
}

declare module 'vue-router/auto-routes' {
  import type {
    RouteRecordInfo,
    ParamValue,
    ParamValueOneOrMore,
    ParamValueZeroOrMore,
    ParamValueZeroOrOne,
  } from 'vue-router'

  /**
   * Route name map generated by unplugin-vue-router
   */
  export interface RouteNamedMap {
    '/': RouteRecordInfo<
      '/',
      '/',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    '/[...all]': RouteRecordInfo<
      '/[...all]',
      '/:all(.*)',
      { all: ParamValue<true> },
      { all: ParamValue<false> },
      | never
    >,
    '/about': RouteRecordInfo<
      '/about',
      '/about',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    '/admin/mdmail': RouteRecordInfo<
      '/admin/mdmail',
      '/admin/mdmail',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    '/payment': RouteRecordInfo<
      '/payment',
      '/payment',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    '/profile': RouteRecordInfo<
      '/profile',
      '/profile',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    '/README': RouteRecordInfo<
      '/README',
      '/README',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    '/signup': RouteRecordInfo<
      '/signup',
      '/signup',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
    '/zoom': RouteRecordInfo<
      '/zoom',
      '/zoom',
      Record<never, never>,
      Record<never, never>,
      | never
    >,
  }

  /**
   * Route file to route info map by unplugin-vue-router.
   * Used by the \`sfc-typed-router\` Volar plugin to automatically type \`useRoute()\`.
   *
   * Each key is a file path relative to the project root with 2 properties:
   * - routes: union of route names of the possible routes when in this page (passed to useRoute<...>())
   * - views: names of nested views (can be passed to <RouterView name="...">)
   *
   * @internal
   */
  export interface _RouteFileInfoMap {
    'src/pages/index.vue': {
      routes:
        | '/'
      views:
        | never
    }
    'src/pages/[...all].vue': {
      routes:
        | '/[...all]'
      views:
        | never
    }
    'src/pages/about.vue': {
      routes:
        | '/about'
      views:
        | never
    }
    'src/pages/admin/mdmail.vue': {
      routes:
        | '/admin/mdmail'
      views:
        | never
    }
    'src/pages/payment.vue': {
      routes:
        | '/payment'
      views:
        | never
    }
    'src/pages/profile.vue': {
      routes:
        | '/profile'
      views:
        | never
    }
    'src/pages/README.md': {
      routes:
        | '/README'
      views:
        | never
    }
    'src/pages/signup.vue': {
      routes:
        | '/signup'
      views:
        | never
    }
    'src/pages/zoom.vue': {
      routes:
        | '/zoom'
      views:
        | never
    }
  }

  /**
   * Get a union of possible route names in a certain route component file.
   * Used by the \`sfc-typed-router\` Volar plugin to automatically type \`useRoute()\`.
   *
   * @internal
   */
  export type _RouteNamesForFilePath<FilePath extends string> =
    _RouteFileInfoMap extends Record<FilePath, infer Info>
      ? Info['routes']
      : keyof RouteNamedMap
}
